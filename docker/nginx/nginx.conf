# =============================================================================
# Nginx Configuration for School Timetable Generator
# Optimized for performance and security
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections and file limits
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # =============================================================================
    # BASIC SETTINGS
    # =============================================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # =============================================================================
    # PERFORMANCE OPTIMIZATIONS
    # =============================================================================
    
    # Enable efficient file transmission
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Timeouts
    keepalive_timeout 65;
    client_header_timeout 60;
    client_body_timeout 60;
    send_timeout 60;
    
    # Buffer sizes
    client_max_body_size 10M;
    client_body_buffer_size 32k;
    client_header_buffer_size 8k;
    large_client_header_buffers 8 64k;
    
    # =============================================================================
    # GZIP COMPRESSION
    # =============================================================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;
    
    # =============================================================================
    # SECURITY HEADERS
    # =============================================================================
    
    # Hide Nginx version
    server_tokens off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; img-src 'self' data: https:; connect-src 'self' ws: wss:;" always;
    
    # =============================================================================
    # RATE LIMITING
    # =============================================================================
    
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    # =============================================================================
    # UPSTREAM SERVERS
    # =============================================================================
    
    # Backend API servers
    upstream backend_api {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Frontend servers
    upstream frontend_app {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Celery Flower monitoring
    upstream flower_monitor {
        server flower:5555 max_fails=3 fail_timeout=30s;
    }
    
    # =============================================================================
    # MAIN SERVER BLOCK
    # =============================================================================
    
    server {
        listen 80;
        server_name localhost;
        
        # Enable HTTP/2
        listen 443 ssl http2 default_server;
        
        # SSL Configuration (if certificates are available)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # =============================================================================
        # API ROUTES
        # =============================================================================
        
        # Backend API
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # Authentication endpoints with stricter rate limiting
        location /api/v1/auth/ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket support for real-time updates
        location /ws {
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://backend_api/health;
            access_log off;
        }
        
        # API Documentation
        location /docs {
            proxy_pass http://backend_api/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /redoc {
            proxy_pass http://backend_api/redoc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # =============================================================================
        # MONITORING ROUTES
        # =============================================================================
        
        # Flower monitoring (protected)
        location /flower/ {
            auth_basic "Flower Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://flower_monitor/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
        
        # =============================================================================
        # STATIC FILES AND FRONTEND
        # =============================================================================
        
        # Static files with caching
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Enable Brotli compression if available
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept-Encoding";
            }
        }
        
        # Media files (uploads, exports)
        location /media/ {
            alias /app/uploads/;
            expires 1d;
            add_header Cache-Control "public";
            
            # Security: prevent execution of uploaded files
            location ~* \.(php|py|pl|sh|cgi)$ {
                deny all;
            }
        }
        
        # Frontend application (React)
        location / {
            limit_req zone=general burst=50 nodelay;
            
            try_files $uri $uri/ @frontend;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept-Encoding";
                try_files $uri @frontend;
            }
        }
        
        # Fallback to frontend for SPA routing
        location @frontend {
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # =============================================================================
        # SECURITY AND ERROR HANDLING
        # =============================================================================
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to configuration files
        location ~* \.(conf|config|ini|log|sql|bak|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        # Robots.txt
        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /api/\nDisallow: /flower/\n";
        }
        
        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }
    }
    
    # =============================================================================
    # HTTP TO HTTPS REDIRECT
    # =============================================================================
    
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
}

# =============================================================================
# STREAM BLOCK FOR TCP/UDP PROXYING (if needed)
# =============================================================================

# Uncomment if you need TCP proxying for databases, etc.
# stream {
#     upstream postgres_backend {
#         server postgres:5432;
#     }
#     
#     server {
#         listen 5432;
#         proxy_pass postgres_backend;
#         proxy_timeout 1s;
#         proxy_responses 1;
#         error_log /var/log/nginx/postgres_proxy.log;
#     }
# } 