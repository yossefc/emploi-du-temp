{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.login(email, password);\n    localStorage.setItem('access_token', response.data.access_token);\n    localStorage.setItem('refresh_token', response.data.refresh_token);\n    return response.data.user;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    await api.logout();\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Logout failed');\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.register(userData);\n    localStorage.setItem('access_token', response.data.access_token);\n    localStorage.setItem('refresh_token', response.data.refresh_token);\n    return response.data.user;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    updateLanguagePreference: (state, action) => {\n      if (state.user) {\n        state.user.languagePreference = action.payload;\n      }\n    }\n  },\n  extraReducers: builder => {\n    // Login\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      var _action$error;\n      state.isLoading = false;\n      state.error = action.payload || ((_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message) || 'Login failed';\n    });\n\n    // Logout\n    builder.addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    }).addCase(logout.rejected, (state, action) => {\n      state.error = action.payload || 'Logout failed';\n    });\n\n    // Register\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      var _action$error2;\n      state.isLoading = false;\n      state.error = action.payload || ((_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.message) || 'Registration failed';\n    });\n  }\n});\nexport const {\n  setUser,\n  clearError,\n  updateLanguagePreference\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","user","isAuthenticated","isLoading","error","login","email","password","rejectWithValue","response","localStorage","setItem","data","access_token","refresh_token","_error$response","_error$response$data","message","logout","_","removeItem","_error$response2","_error$response2$data","register","userData","_error$response3","_error$response3$data","authSlice","name","reducers","setUser","state","action","payload","clearError","updateLanguagePreference","languagePreference","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$error","_action$error2","actions","reducer"],"sources":["C:/Users/yossef/OneDrive/Desktop/emploi du temp/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { \r\n  createSlice, \r\n  createAsyncThunk, \r\n  PayloadAction, \r\n  ActionReducerMapBuilder\r\n} from '@reduxjs/toolkit';\r\nimport api from '../../services/api';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  username: string;\r\n  role: 'admin' | 'teacher' | 'viewer';\r\n  languagePreference: 'fr' | 'he';\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunks\r\nexport const login = createAsyncThunk<\r\n  User, // return type\r\n  { email: string; password: string }, // arg type\r\n  { rejectValue: string }\r\n>(\r\n  'auth/login',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.login(email, password);\r\n      localStorage.setItem('access_token', response.data.access_token);\r\n      localStorage.setItem('refresh_token', response.data.refresh_token);\r\n      return response.data.user;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.message || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logout = createAsyncThunk<\r\n  void, // return type\r\n  void, // no arg\r\n  { rejectValue: string }\r\n>(\r\n  'auth/logout', \r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await api.logout();\r\n      localStorage.removeItem('access_token');\r\n      localStorage.removeItem('refresh_token');\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.message || 'Logout failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk<\r\n  User, // return type\r\n  { username: string; email: string; password: string; role?: string }, // arg type\r\n  { rejectValue: string }\r\n>(\r\n  'auth/register',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.register(userData);\r\n      localStorage.setItem('access_token', response.data.access_token);\r\n      localStorage.setItem('refresh_token', response.data.refresh_token);\r\n      return response.data.user;\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state: AuthState, action: PayloadAction<User>) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n    },\r\n    clearError: (state: AuthState) => {\r\n      state.error = null;\r\n    },\r\n    updateLanguagePreference: (state: AuthState, action: PayloadAction<'fr' | 'he'>) => {\r\n      if (state.user) {\r\n        state.user.languagePreference = action.payload;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder: ActionReducerMapBuilder<AuthState>) => {\r\n    // Login\r\n    builder\r\n      .addCase(login.pending, (state: AuthState) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state: AuthState, action: PayloadAction<User>) => {\r\n        state.isLoading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state: AuthState, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string || action.error?.message || 'Login failed';\r\n      });\r\n\r\n    // Logout\r\n    builder\r\n      .addCase(logout.fulfilled, (state: AuthState) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      .addCase(logout.rejected, (state: AuthState, action) => {\r\n        state.error = action.payload as string || 'Logout failed';\r\n      });\r\n\r\n    // Register\r\n    builder\r\n      .addCase(register.pending, (state: AuthState) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state: AuthState, action: PayloadAction<User>) => {\r\n        state.isLoading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state: AuthState, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload as string || action.error?.message || 'Registration failed';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setUser, clearError, updateLanguagePreference } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}